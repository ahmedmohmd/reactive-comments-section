---
interface Props {
  name: string;
  image: string;
  createdAt: string;
  score: number;
  content: string;
}

const { name, image, createdAt, score, content } = Astro.props;
---

<article
  class="m-4 #fff xl:w-[55%] lg:w-[65%] md:w-[80%] w-[100%] rounded-lg flex gap-7 justify-between p-6 items-center bg-white"
>
  <div
    class="flex justify-center items-center flex-col gap-4 bg-back px-4 py-2 rounded-xl text-lg font-bold"
  >
    <span
      class="text-2xl text-gray-300 hover:cursor-pointer duration-300 hover:text-violet"
      >+</span
    >
    <span class="text-violet">{score}</span>
    <span
      class="text-2xl text-gray-300 hover:cursor-pointer duration-300 hover:text-violet"
      >-</span
    >
  </div>

  <div class="flex justify-center flex-col items-center flex-1 gap-4">
    <div class="w-full flex justify-between items-center">
      <div class="flex justify-center items-center gap-3">
        <img src={image} alt={name} class="w-10 h-10" />
        <span class="text-gray-600 font-bold text-lg">{name}</span>
        <span class="text-[#777]">{createdAt}</span>
      </div>
      <div
        class="replay-btn flex justify-center items-center gap-2 group self-start"
      >
        <img
          src="/images/icon-reply.svg"
          alt="Replay Icons"
          class="w-4 h-4 group-hover:opacity-60 duration-300 group-hover:cursor-pointer"
        />
        <span
          class="text-violet font-semibold text-md group-hover:opacity-60 duration-300 group-hover:cursor-pointer"
          >Replay</span
        >
      </div>
    </div>

    <p class="text-gray-500 text-md">
      {content}
    </p>
  </div>
</article>

<script>
  const replayBtn: HTMLDivElement = document.querySelector(".replay-btn")!;

  const handleReplay = () => {
    console.log("Replay...");
  };

  replayBtn.onclick = handleReplay;
</script>
